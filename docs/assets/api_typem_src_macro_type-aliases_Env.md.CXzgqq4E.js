import{_ as a,c as r,o,ag as t}from"./chunks/framework.fdeNJTK-.js";const p=JSON.parse('{"title":"Type Alias: Env<T, U>","description":"","frontmatter":{},"headers":[],"relativePath":"api/typem/src/macro/type-aliases/Env.md","filePath":"api/typem/src/macro/type-aliases/Env.md"}'),d={name:"api/typem/src/macro/type-aliases/Env.md"};function c(n,e,s,l,i,h){return o(),r("div",null,e[0]||(e[0]=[t('<p><a href="./../../../../">Documentation</a> / <a href="./../">typem/src/macro</a> / Env</p><h1 id="type-alias-env-t-u" tabindex="-1">Type Alias: Env&lt;T, U&gt; <a class="header-anchor" href="#type-alias-env-t-u" aria-label="Permalink to &quot;Type Alias: Env\\&lt;T, U\\&gt;&quot;">​</a></h1><blockquote><p><strong>Env</strong>&lt;<code>T</code>, <code>U</code>&gt; = <code>object</code> &amp; <code>{ [key in CustomMap[keyof CustomMap]]?: (t: U[]) =&gt; U }</code> &amp; <code>{ [key in ModifierMap[keyof ModifierMap]]?: (t: U) =&gt; U }</code></p></blockquote><p>Defined in: <a href="https://github.com/weisrc/typem/blob/9bcd3499760fd3536827a20a351969d35cb0f54c/packages/typem/src/macro.ts#L30" target="_blank" rel="noreferrer">typem/src/macro.ts:30</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="callable" tabindex="-1">callable() <a class="header-anchor" href="#callable" aria-label="Permalink to &quot;callable()&quot;">​</a></h3><blockquote><p><strong>callable</strong>(<code>t</code>, <code>signatures</code>): <code>U</code></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="t" tabindex="-1">t <a class="header-anchor" href="#t" aria-label="Permalink to &quot;t&quot;">​</a></h5><p><code>U</code></p><h5 id="signatures" tabindex="-1">signatures <a class="header-anchor" href="#signatures" aria-label="Permalink to &quot;signatures&quot;">​</a></h5><p>[<code>U</code>[], <code>U</code>][]</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="discriminatedunion" tabindex="-1">discriminatedUnion() <a class="header-anchor" href="#discriminatedunion" aria-label="Permalink to &quot;discriminatedUnion()&quot;">​</a></h3><blockquote><p><strong>discriminatedUnion</strong>(<code>path</code>, <code>values</code>, <code>t</code>): <code>U</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h5><p><code>string</code></p><h5 id="values" tabindex="-1">values <a class="header-anchor" href="#values" aria-label="Permalink to &quot;values&quot;">​</a></h5><p><code>any</code>[]</p><h5 id="t-1" tabindex="-1">t <a class="header-anchor" href="#t-1" aria-label="Permalink to &quot;t&quot;">​</a></h5><p><code>U</code>[]</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="entry" tabindex="-1">entry() <a class="header-anchor" href="#entry" aria-label="Permalink to &quot;entry()&quot;">​</a></h3><blockquote><p><strong>entry</strong>(...<code>args</code>): <code>T</code></p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="args" tabindex="-1">args <a class="header-anchor" href="#args" aria-label="Permalink to &quot;args&quot;">​</a></h5><p>...<code>any</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><h3 id="error" tabindex="-1">error() <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error()&quot;">​</a></h3><blockquote><p><strong>error</strong>(<code>message</code>): <code>U</code></p></blockquote><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="message" tabindex="-1">message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;message&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="general" tabindex="-1">general() <a class="header-anchor" href="#general" aria-label="Permalink to &quot;general()&quot;">​</a></h3><blockquote><p><strong>general</strong>(<code>type</code>): <code>U</code></p></blockquote><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h5><p><code>&quot;string&quot;</code> | <code>&quot;number&quot;</code> | <code>&quot;bigint&quot;</code> | <code>&quot;boolean&quot;</code> | <code>&quot;symbol&quot;</code> | <code>&quot;undefined&quot;</code> | <code>&quot;object&quot;</code> | <code>&quot;function&quot;</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="intersection" tabindex="-1">intersection() <a class="header-anchor" href="#intersection" aria-label="Permalink to &quot;intersection()&quot;">​</a></h3><blockquote><p><strong>intersection</strong>(<code>t</code>): <code>U</code></p></blockquote><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="t-2" tabindex="-1">t <a class="header-anchor" href="#t-2" aria-label="Permalink to &quot;t&quot;">​</a></h5><p><code>U</code>[]</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="literal" tabindex="-1">literal() <a class="header-anchor" href="#literal" aria-label="Permalink to &quot;literal()&quot;">​</a></h3><blockquote><p><strong>literal</strong>(<code>value</code>): <code>U</code></p></blockquote><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="object" tabindex="-1">object() <a class="header-anchor" href="#object" aria-label="Permalink to &quot;object()&quot;">​</a></h3><blockquote><p><strong>object</strong>(<code>shape</code>, <code>required</code>): <code>U</code></p></blockquote><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="shape" tabindex="-1">shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;shape&quot;">​</a></h5><h5 id="required" tabindex="-1">required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;required&quot;">​</a></h5><p><code>string</code>[]</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="optional" tabindex="-1">optional() <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;optional()&quot;">​</a></h3><blockquote><p><strong>optional</strong>(<code>t</code>): <code>U</code></p></blockquote><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="t-3" tabindex="-1">t <a class="header-anchor" href="#t-3" aria-label="Permalink to &quot;t&quot;">​</a></h5><p><code>U</code></p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="record" tabindex="-1">record() <a class="header-anchor" href="#record" aria-label="Permalink to &quot;record()&quot;">​</a></h3><blockquote><p><strong>record</strong>(<code>key</code>, <code>value</code>): <code>U</code></p></blockquote><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="key" tabindex="-1">key <a class="header-anchor" href="#key" aria-label="Permalink to &quot;key&quot;">​</a></h5><p><code>U</code></p><h5 id="value-1" tabindex="-1">value <a class="header-anchor" href="#value-1" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>U</code></p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="recursive" tabindex="-1">recursive() <a class="header-anchor" href="#recursive" aria-label="Permalink to &quot;recursive()&quot;">​</a></h3><blockquote><p><strong>recursive</strong>(<code>fn</code>): <code>U</code></p></blockquote><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="fn" tabindex="-1">fn <a class="header-anchor" href="#fn" aria-label="Permalink to &quot;fn&quot;">​</a></h5><p>(<code>self</code>) =&gt; <code>U</code></p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="special" tabindex="-1">special() <a class="header-anchor" href="#special" aria-label="Permalink to &quot;special()&quot;">​</a></h3><blockquote><p><strong>special</strong>(<code>type</code>): <code>U</code></p></blockquote><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="type-1" tabindex="-1">type <a class="header-anchor" href="#type-1" aria-label="Permalink to &quot;type&quot;">​</a></h5><p><code>&quot;void&quot;</code> | <code>&quot;any&quot;</code> | <code>&quot;unknown&quot;</code> | <code>&quot;never&quot;</code></p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h3 id="union" tabindex="-1">union() <a class="header-anchor" href="#union" aria-label="Permalink to &quot;union()&quot;">​</a></h3><blockquote><p><strong>union</strong>(<code>t</code>): <code>U</code></p></blockquote><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="t-4" tabindex="-1">t <a class="header-anchor" href="#t-4" aria-label="Permalink to &quot;t&quot;">​</a></h5><p><code>U</code>[]</p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t-5" tabindex="-1">T <a class="header-anchor" href="#t-5" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><h3 id="u" tabindex="-1">U <a class="header-anchor" href="#u" aria-label="Permalink to &quot;U&quot;">​</a></h3><p><code>U</code></p>',110)]))}const q=a(d,[["render",c]]);export{p as __pageData,q as default};
