import{_ as a,c as r,o as t,ag as o}from"./chunks/framework.fdeNJTK-.js";const u=JSON.parse('{"title":"Function: withErrors()","description":"","frontmatter":{},"headers":[],"relativePath":"api/predicate/src/functions/withErrors.md","filePath":"api/predicate/src/functions/withErrors.md"}'),i={name:"api/predicate/src/functions/withErrors.md"};function s(c,e,d,n,h,l){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../../../">Documentation</a> / <a href="./../">predicate/src</a> / withErrors</p><h1 id="function-witherrors" tabindex="-1">Function: withErrors() <a class="header-anchor" href="#function-witherrors" aria-label="Permalink to &quot;Function: withErrors()&quot;">​</a></h1><blockquote><p><strong>withErrors</strong>&lt;<code>T</code>&gt;(<code>is</code>): <a href="./../type-aliases/Predicate.html"><code>Predicate</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/weisrc/typem/blob/9bcd3499760fd3536827a20a351969d35cb0f54c/packages/predicate/src/index.ts#L10" target="_blank" rel="noreferrer">predicate/src/index.ts:10</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="is" tabindex="-1">is <a class="header-anchor" href="#is" aria-label="Permalink to &quot;is&quot;">​</a></h3><p><a href="./../type-aliases/Predicate.html"><code>Predicate</code></a>&lt;<code>T</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/Predicate.html"><code>Predicate</code></a>&lt;<code>T</code>&gt;</p>',12)]))}const f=a(i,[["render",s]]);export{u as __pageData,f as default};
