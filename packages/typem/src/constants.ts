import ts from "typescript";

export const CUSTOM_MAP = {
  Tuple: "tuple",
  Array: "array",
  Int8Array: "int8Array",
  Uint8Array: "uint8Array",
  Uint8ClampedArray: "uint8ClampedArray",
  Int16Array: "int16Array",
  Uint16Array: "uint16Array",
  Int32Array: "int32Array",
  Uint32Array: "uint32Array",
  Float16Array: "float16Array",
  Float32Array: "float32Array",
  Float64Array: "float64Array",
  BigInt64Array: "bigInt64Array",
  BigUint64Array: "bigUint64Array",
  Map: "map",
  Set: "set",
  ArrayBuffer: "arrayBuffer",
  SharedArrayBuffer: "sharedArrayBuffer",
  DataView: "dataView",
} as const;

export const MODIFIER_MAP = {
  [ts.SyntaxKind.AbstractKeyword]: "abstractModifier",
  [ts.SyntaxKind.AccessorKeyword]: "accessorModifier",
  [ts.SyntaxKind.AsyncKeyword]: "asyncModifier",
  [ts.SyntaxKind.ConstKeyword]: "constModifier",
  [ts.SyntaxKind.DeclareKeyword]: "declareModifier",
  [ts.SyntaxKind.DefaultKeyword]: "defaultModifier",
  [ts.SyntaxKind.ExportKeyword]: "exportModifier",
  [ts.SyntaxKind.InKeyword]: "inModifier",
  [ts.SyntaxKind.PrivateKeyword]: "privateModifier",
  [ts.SyntaxKind.ProtectedKeyword]: "protectedModifier",
  [ts.SyntaxKind.PublicKeyword]: "publicModifier",
  [ts.SyntaxKind.OutKeyword]: "outModifier",
  [ts.SyntaxKind.OverrideKeyword]: "overrideModifier",
  [ts.SyntaxKind.ReadonlyKeyword]: "readonlyModifier",
  [ts.SyntaxKind.StaticKeyword]: "staticModifier",
} as const;

export const RESERVED_NAMES = [
  "break",
  "case",
  "catch",
  "class",
  "const",
  "continue",
  "debugger",
  "default",
  "delete",
  "do",
  "else",
  "export",
  "extends",
  "finally",
  "for",
  "function",
  "if",
  "import",
  "in",
  "instanceof",
  "new",
  "return",
  "super",
  "switch",
  "this",
  "throw",
  "try",
  "typeof",
  "var",
  "void",
  "while",
  "with",
  "yield",
  "enum",
  "implements",
  "interface",
  "let",
  "package",
  "private",
  "protected",
  "public",
  "static",
  "await",
] as const;
